{"version":3,"file":"css-transition.js","sources":["../../src/modifiers/css-transition.js"],"sourcesContent":["import Modifier from 'ember-modifier';\nimport { registerDestructor } from '@ember/destroyable';\nimport {\n  dependencySatisfies,\n  getOwnConfig,\n  macroCondition,\n} from '@embroider/macros';\nimport { buildWaiter } from '@ember/test-waiters';\n\nimport { nextTick, sleep, computeTimeout } from '../utils/transition-utils.js';\n\nlet waiter;\n\nif (macroCondition(getOwnConfig()?.useTestWaiters)) {\n  waiter = buildWaiter('ember-css-transitions');\n} else {\n  waiter = {\n    beginAsync() {\n      /* fake */\n    },\n    endAsync() {\n      /* fake */\n    },\n  };\n}\n\nlet modifier;\n\nif (macroCondition(dependencySatisfies('ember-modifier', '>=3.2.0 || 4.x'))) {\n  /**\n    Modifier that applies classes. Usage:\n\n    ```hbs\n    <div {{css-transition name=\"example\"}}>\n    <p>Hello world</p>\n    </div>\n    ```\n\n    @class CssTransitionModifier\n    @argument {Function} [didTransitionIn]\n    @argument {Function} [didTransitionOut]\n    @public\n   */\n  class CssTransitionModifier extends Modifier {\n    element = null;\n    clone = null;\n    parentElement = null;\n    nextElementSibling = null;\n    installed = false;\n    finishedTransitionIn = false;\n    isEnabled = true;\n    parentSelector;\n\n    /**\n     * @property el\n     * @type {(HTMLElement|undefined)}\n     * @private\n     * @readonly\n     */\n    get el() {\n      return this.clone || this.element;\n    }\n\n    /**\n     * @property didTransitionIn\n     * @type {(Function|undefined)}\n     * @private\n     */\n    didTransitionIn;\n\n    /**\n     * @property didTransitionOut\n     * @type {(Function|undefined)}\n     * @private\n     */\n    didTransitionOut;\n\n    /**\n     * @property transitionName\n     * @type {(String|undefined)}\n     * @private\n     */\n    transitionName;\n\n    /**\n     * @property enterClass\n     * @type {(String|undefined)}\n     * @private\n     */\n    enterClass;\n\n    /**\n     * @property enterActiveClass\n     * @type {(String|undefined)}\n     * @private\n     */\n    enterActiveClass;\n\n    /**\n     * @property enterToClass\n     * @type {(String|undefined)}\n     * @private\n     */\n    enterToClass;\n\n    /**\n     * @property leaveClass\n     * @type {(String|undefined)}\n     * @private\n     */\n    leaveClass;\n\n    /**\n     * @property leaveActiveClass\n     * @type {(String|undefined)}\n     * @private\n     */\n    leaveActiveClass;\n\n    /**\n     * @property leaveToClass\n     * @type {(String|undefined)}\n     * @private\n     */\n    leaveToClass;\n\n    constructor(owner, args) {\n      super(owner, args);\n\n      registerDestructor(this, () => {\n        if (this.isEnabled === false || !this.finishedTransitionIn) {\n          return;\n        }\n\n        this.guardedRun(this.transitionOut);\n      });\n    }\n\n    modify(element, positional, named) {\n      this.element = element;\n\n      this.setupProperties(positional, named);\n\n      if (named.isEnabled === false || this.installed) {\n        return;\n      }\n\n      this.installed = true;\n      let el = this.getElementToClone();\n      this.parentElement = el.parentElement;\n      this.nextElementSibling = el.nextElementSibling;\n\n      this.guardedRun(this.transitionIn);\n    }\n\n    setupProperties(positional, named) {\n      this.isEnabled = named.isEnabled !== false;\n      this.transitionName = positional[0] || named.name;\n      this.didTransitionIn = named.didTransitionIn;\n      this.didTransitionOut = named.didTransitionOut;\n      this.parentSelector = named.parentSelector;\n\n      this.enterClass =\n        named.enterClass ||\n        (this.transitionName && `${this.transitionName}-enter`);\n\n      this.enterActiveClass =\n        named.enterActiveClass ||\n        (this.transitionName && `${this.transitionName}-enter-active`);\n\n      this.enterToClass =\n        named.enterToClass ||\n        (this.transitionName && `${this.transitionName}-enter-to`);\n\n      this.leaveClass =\n        named.leaveClass ||\n        (this.transitionName && `${this.transitionName}-leave`);\n\n      this.leaveActiveClass =\n        named.leaveActiveClass ||\n        (this.transitionName && `${this.transitionName}-leave-active`);\n\n      this.leaveToClass =\n        named.leaveToClass ||\n        (this.transitionName && `${this.transitionName}-leave-to`);\n    }\n\n    /**\n     * Adds a clone to the parentElement, so it can be transitioned out.\n     *\n     * @private\n     * @method addClone\n     */\n    addClone() {\n      let original = this.getElementToClone();\n      let parentElement = original.parentElement || this.parentElement;\n      let nextElementSibling =\n        original.nextElementSibling || this.nextElementSibling;\n\n      if (\n        nextElementSibling &&\n        nextElementSibling.parentElement !== parentElement\n      ) {\n        nextElementSibling = null;\n      }\n\n      let clone = original.cloneNode(true);\n\n      clone.setAttribute('id', `${original.id}_clone`);\n\n      parentElement.insertBefore(clone, nextElementSibling);\n\n      this.clone = clone;\n    }\n\n    /**\n     * Finds the correct element to clone. If `parentSelector` is present, we will\n     * use the closest parent element that matches that selector. Otherwise, we use\n     * the element's immediate parentElement directly.\n     *\n     * @private\n     * @method getElementToClone\n     */\n    getElementToClone() {\n      if (this.parentSelector) {\n        return this.element.closest(this.parentSelector);\n      } else {\n        return this.element;\n      }\n    }\n\n    /**\n     * Removes the clone from the parentElement\n     *\n     * @private\n     * @method removeClone\n     */\n    removeClone() {\n      if (this.clone.isConnected && this.clone.parentNode !== null) {\n        this.clone.parentNode.removeChild(this.clone);\n      }\n    }\n\n    *transitionIn() {\n      if (this.enterClass) {\n        yield* this.transition({\n          className: this.enterClass,\n          activeClassName: this.enterActiveClass,\n          toClassName: this.enterToClass,\n        });\n\n        if (this.didTransitionIn) {\n          this.didTransitionIn();\n        }\n      }\n\n      this.finishedTransitionIn = true;\n    }\n\n    *transitionOut() {\n      if (this.leaveClass) {\n        // We can't stop ember from removing the element\n        // so we clone the element to animate it out\n        this.addClone();\n\n        yield nextTick();\n\n        yield* this.transition({\n          className: this.leaveClass,\n          activeClassName: this.leaveActiveClass,\n          toClassName: this.leaveToClass,\n        });\n\n        this.removeClone();\n\n        if (this.didTransitionOut) {\n          this.didTransitionOut();\n        }\n\n        this.clone = null;\n      }\n    }\n\n    /**\n     * Transitions the element.\n     *\n     * @private\n     * @method transition\n     * @param {Object} args\n     * @param {String} args.className the class representing the starting state\n     * @param {String} args.activeClassName the class applied during the entire transition. This class can be used to define the duration, delay and easing curve.\n     * @param {String} args.toClassName the class representing the finished state\n     * @return {Generator}\n     */\n    *transition({ className, activeClassName, toClassName }) {\n      let element = this.el;\n\n      // add first class right away\n      this.addClass(className);\n      this.addClass(activeClassName);\n\n      yield nextTick();\n\n      // This is for to force a repaint,\n      // which is necessary in order to transition styles when adding a class name.\n      element.scrollTop;\n\n      // after repaint\n      this.addClass(toClassName);\n      this.removeClass(className);\n\n      // wait for ember to apply classes\n      // set timeout for animation end\n      yield sleep(computeTimeout(element) || 0);\n\n      this.removeClass(toClassName);\n      this.removeClass(activeClassName);\n    }\n\n    /**\n     * Add classNames to el.\n     *\n     * @private\n     * @method addClass\n     * @param {String} className\n     */\n    addClass(className) {\n      this.el.classList.add(...className.trim().split(/\\s+/));\n    }\n\n    /**\n     * Remove classNames from el.\n     *\n     * @private\n     * @method removeClass\n     * @param {String} className\n     */\n    removeClass(className) {\n      this.el.classList.remove(...className.trim().split(/\\s+/));\n    }\n\n    async guardedRun(f, ...args) {\n      const token = waiter.beginAsync();\n\n      let gen = f.call(this, ...args);\n      let isDone = false;\n\n      // stop if the function doesn't have anything else to yield\n      // or if the element is no longer present\n      while (!isDone && this.el) {\n        let { value, done } = gen.next();\n        isDone = done;\n        await value;\n      }\n\n      waiter.endAsync(token);\n    }\n  }\n\n  modifier = CssTransitionModifier;\n} else {\n  modifier = class extends Modifier {\n    clone = null;\n    parentElement = null;\n    nextElementSibling = null;\n    installed = false;\n\n    /**\n     * @property el\n     * @type {(HTMLElement|undefined)}\n     * @private\n     * @readonly\n     */\n    get el() {\n      return this.clone || this.element;\n    }\n\n    /**\n     * @property transitionName\n     * @type {(String|undefined)}\n     * @private\n     * @readonly\n     */\n    get transitionName() {\n      return this.args.positional[0] || this.args.named.name;\n    }\n\n    /**\n     * @property enterClass\n     * @type {(String|undefined)}\n     * @private\n     * @readonly\n     */\n    get enterClass() {\n      return (\n        this.args.named.enterClass ||\n        (this.transitionName && `${this.transitionName}-enter`)\n      );\n    }\n\n    /**\n     * @property enterActiveClass\n     * @type {(String|undefined)}\n     * @private\n     * @readonly\n     */\n    get enterActiveClass() {\n      return (\n        this.args.named.enterActiveClass ||\n        (this.transitionName && `${this.transitionName}-enter-active`)\n      );\n    }\n\n    /**\n     * @property enterToClass\n     * @type {(String|undefined)}\n     * @private\n     * @readonly\n     */\n    get enterToClass() {\n      return (\n        this.args.named.enterToClass ||\n        (this.transitionName && `${this.transitionName}-enter-to`)\n      );\n    }\n\n    /**\n     * @property leaveClass\n     * @type {(String|undefined)}\n     * @private\n     * @readonly\n     */\n    get leaveClass() {\n      return (\n        this.args.named.leaveClass ||\n        (this.transitionName && `${this.transitionName}-leave`)\n      );\n    }\n\n    /**\n     * @property leaveActiveClass\n     * @type {(String|undefined)}\n     * @private\n     * @readonly\n     */\n    get leaveActiveClass() {\n      return (\n        this.args.named.leaveActiveClass ||\n        (this.transitionName && `${this.transitionName}-leave-active`)\n      );\n    }\n\n    /**\n     * @property leaveToClass\n     * @type {(String|undefined)}\n     * @private\n     * @readonly\n     */\n    get leaveToClass() {\n      return (\n        this.args.named.leaveToClass ||\n        (this.transitionName && `${this.transitionName}-leave-to`)\n      );\n    }\n\n    didInstall() {\n      if (this.args.named.isEnabled === false) {\n        return;\n      }\n\n      let el = this.getElementToClone();\n      this.parentElement = el.parentElement;\n      this.nextElementSibling = el.nextElementSibling;\n\n      this.guardedRun(this.transitionIn);\n    }\n\n    willRemove() {\n      if (this.args.named.isEnabled === false || !this.installed) {\n        return;\n      }\n\n      this.guardedRun(this.transitionOut);\n    }\n\n    /**\n     * Adds a clone to the parentElement so it can be transitioned out\n     *\n     * @private\n     * @method addClone\n     */\n    addClone() {\n      let original = this.getElementToClone();\n      let parentElement = original.parentElement || this.parentElement;\n      let nextElementSibling =\n        original.nextElementSibling || this.nextElementSibling;\n\n      if (\n        nextElementSibling &&\n        nextElementSibling.parentElement !== parentElement\n      ) {\n        nextElementSibling = null;\n      }\n\n      let clone = original.cloneNode(true);\n\n      clone.setAttribute('id', `${original.id}_clone`);\n\n      parentElement.insertBefore(clone, nextElementSibling);\n\n      this.clone = clone;\n    }\n\n    /**\n     * Finds the correct element to clone. If `parentSelector` is present, we will\n     * use the closest parent element that matches that selector. Otherwise we use\n     * the element's immediate parentElement directly.\n     *\n     * @private\n     * @method getElementToClone\n     */\n    getElementToClone() {\n      if (this.args.named.parentSelector) {\n        return this.element.closest(this.args.named.parentSelector);\n      } else {\n        return this.element;\n      }\n    }\n\n    /**\n     * Removes the clone from the parentElement\n     *\n     * @private\n     * @method removeClone\n     */\n    removeClone() {\n      if (this.clone.isConnected && this.clone.parentNode !== null) {\n        this.clone.parentNode.removeChild(this.clone);\n      }\n    }\n\n    *transitionIn() {\n      if (this.enterClass) {\n        yield* this.transition({\n          className: this.enterClass,\n          activeClassName: this.enterActiveClass,\n          toClassName: this.enterToClass,\n        });\n\n        if (this.args.named.didTransitionIn) {\n          this.args.named.didTransitionIn();\n        }\n      }\n\n      this.installed = true;\n    }\n\n    *transitionOut() {\n      if (this.leaveClass) {\n        // We can't stop ember from removing the element\n        // so we clone the element to animate it out\n        this.addClone();\n\n        yield nextTick();\n\n        yield* this.transition({\n          className: this.leaveClass,\n          activeClassName: this.leaveActiveClass,\n          toClassName: this.leaveToClass,\n        });\n\n        this.removeClone();\n\n        if (this.args.named.didTransitionOut) {\n          this.args.named.didTransitionOut();\n        }\n\n        this.clone = null;\n      }\n    }\n\n    /**\n     * Transitions the element.\n     *\n     * @private\n     * @method transition\n     * @param {Object} args\n     * @param {String} args.className the class representing the starting state\n     * @param {String} args.activeClassName the class applied during the entire transition. This class can be used to define the duration, delay and easing curve.\n     * @param {String} args.toClassName the class representing the finished state\n     * @return {Generator}\n     */\n    *transition({ className, activeClassName, toClassName }) {\n      let element = this.el;\n\n      // add first class right away\n      this.addClass(className);\n      this.addClass(activeClassName);\n\n      yield nextTick();\n\n      // This is for to force a repaint,\n      // which is necessary in order to transition styles when adding a class name.\n      element.scrollTop;\n\n      // after repaint\n      this.addClass(toClassName);\n      this.removeClass(className);\n\n      // wait for ember to apply classes\n      // set timeout for animation end\n      yield sleep(computeTimeout(element) || 0);\n\n      this.removeClass(toClassName);\n      this.removeClass(activeClassName);\n    }\n\n    /**\n     * Add classNames to el.\n     *\n     * @private\n     * @method addClass\n     * @param {String} className\n     */\n    addClass(className) {\n      this.el.classList.add(...className.trim().split(/\\s+/));\n    }\n\n    /**\n     * Remove classNames from el.\n     *\n     * @private\n     * @method removeClass\n     * @param {String} className\n     */\n    removeClass(className) {\n      this.el.classList.remove(...className.trim().split(/\\s+/));\n    }\n\n    async guardedRun(f, ...args) {\n      const token = waiter.beginAsync();\n\n      let gen = f.call(this, ...args);\n      let isDone = false;\n\n      // stop if the function doesn't have anything else to yield\n      // or if the element is no longer present\n      while (!isDone && this.el) {\n        let { value, done } = gen.next();\n        isDone = done;\n        await value;\n      }\n\n      waiter.endAsync(token);\n    }\n  };\n}\n\nexport default modifier;\n"],"names":["waiter","macroCondition","getOwnConfig","useTestWaiters","buildWaiter","beginAsync","endAsync","modifier","dependencySatisfies","CssTransitionModifier","Modifier","element","clone","parentElement","nextElementSibling","installed","finishedTransitionIn","isEnabled","parentSelector","el","didTransitionIn","didTransitionOut","transitionName","enterClass","enterActiveClass","enterToClass","leaveClass","leaveActiveClass","leaveToClass","constructor","owner","args","registerDestructor","guardedRun","transitionOut","modify","positional","named","setupProperties","getElementToClone","transitionIn","name","addClone","original","cloneNode","setAttribute","id","insertBefore","closest","removeClone","isConnected","parentNode","removeChild","transition","className","activeClassName","toClassName","nextTick","addClass","scrollTop","removeClass","sleep","computeTimeout","classList","add","trim","split","remove","f","token","gen","call","isDone","value","done","next","didInstall","willRemove"],"mappings":"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"}